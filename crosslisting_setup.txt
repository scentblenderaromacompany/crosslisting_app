# Cross-Listing Application Setup

This document contains all the steps required to set up and run the Cross-Listing Application.

## CSS Styling
Run the following command to create the CSS file:

\`\`\`bash
cat > ~/crosslisting_app/static/styles.css << 'CSS'
/* General Styling */
body {
    font-family: 'Garamond', serif;
    background-color: #F5F5DC; /* Light beige/cream background */
    color: #4B3A31; /* Dark brown text color */
    margin: 0;
    padding: 0;
}

/* Header Styling */
header {
    background-color: #8B7D6B; /* Medium brown for header background */
    color: #F5F5DC; /* Light beige text */
    padding: 20px;
    text-align: center;
    border-bottom: 3px solid #D2B48C; /* Light brown border */
}

/* ... additional CSS content ... */

footer p {
    margin: 0;
}
CSS
\`\`\`

## Dockerfile
To create a Dockerfile:

\`\`\`bash
cat > ~/crosslisting_app/Dockerfile << 'DOCKERFILE'
# Use an official Python runtime as a parent image
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Make port 5000 available to the world outside this container
EXPOSE 5000

# Define environment variable
ENV FLASK_APP=app.py

# Run the application
CMD ["flask", "run", "--host=0.0.0.0"]
DOCKERFILE
\`\`\`

## Requirements File

Create the `requirements.txt` file:

\`\`\`bash
cat > ~/crosslisting_app/requirements.txt << 'REQUIREMENTS'
Flask==2.0.1
Flask-SQLAlchemy==2.5.1
Selenium==3.141.0
ebaysdk==2.1.5
requests==2.25.1
python-dotenv==0.19.0
REQUIREMENTS
\`\`\`

## README.md
Create a README file with the following content:

\`\`\`bash
cat > ~/crosslisting_app/README.md << 'README'
# Cross-Listing Application

## Overview

... (Complete README content here)

## License

This project is licensed under the MIT License.
README
\`\`\`

## Docker Compose (Optional)
For Docker Compose:

\`\`\`bash
cat > ~/crosslisting_app/docker-compose.yml << 'DOCKER_COMPOSE'
version: '3.7'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    volumes:
      - .:/app
    command: flask run --host=0.0.0.0

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: crosslisting
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
DOCKER_COMPOSE
\`\`\`

## .gitignore

Create a `.gitignore` file:

\`\`\`bash
cat > ~/crosslisting_app/.gitignore << 'GITIGNORE'
*.pyc
__pycache__/
instance/
.env
.DS_Store
GITIGNORE
\`\`\`

## Running the Application

Follow these steps to build and run the Docker container:

1. Build the Docker image:
   \`\`\`bash
   docker build -t crosslisting_app .
   \`\`\`

2. Run the Docker container:
   \`\`\`bash
   docker run -p 5000:5000 crosslisting_app
   \`\`\`

3. Access the application at `http://localhost:5000`.

## Testing

Run the tests using:

\`\`\`bash
python -m unittest discover -s tests
\`\`\`

